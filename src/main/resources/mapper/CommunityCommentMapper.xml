<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.acorn.movielink.comunity.repository.CommunityCommentMapper">

    <resultMap id="commentResultMap" type="com.acorn.movielink.comunity.dto.CommentDTO">
        <result column="comment_id" property="commentId"/>
        <result column="post_id" property="postId"/>
        <result column="mem_id" property="memId"/>
        <result column="parent_id" property="parentId"/>
        <result column="content" property="content"/>
        <result column="comment_reg_at" property="commentRegAt"/>
        <result column="comment_updated_at" property="commentUpdatedAt"/>
        <result column="comment_deleted_at" property="commentDeletedAt"/>
        <result column="comment_like_cnt" property="commentLikeCnt"/>
    </resultMap>

    <!-- 댓글 최신등록순 조회 -->
    <select id="getCommentsByPostId" resultMap="commentResultMap" parameterType="int">
        SELECT * FROM comment
        WHERE post_id = #{postId} AND parent_id IS NULL
        ORDER BY comment_reg_at DESC
    </select>


    <!-- 대댓글 조회 -->
    <select id="getRepliesByParentId" resultMap="commentResultMap" parameterType="int">
        SELECT * FROM comment
        WHERE parent_id = #{parentId}
        ORDER BY comment_reg_at DESC
    </select>



    <!-- 댓글 작성 -->
    <insert id="insertComment" parameterType="com.acorn.movielink.comunity.dto.CommentDTO">
        INSERT INTO comment (post_id, mem_id, content, parent_id, comment_reg_at)
        VALUES (#{postId}, #{memId}, #{content}, NULL, NOW())
    </insert>

    <!-- 대댓글 작성 -->
    <insert id="insertReply" parameterType="com.acorn.movielink.comunity.dto.CommentDTO">
        INSERT INTO comment (post_id, mem_id, content, parent_id, comment_reg_at))
        VALUES (#{postId}, #{memId}, #{content}, #{parentId}, NOW())
    </insert>
    <!-- 댓글 수정 -->
    <update id="updateComment" parameterType="com.acorn.movielink.comunity.dto.CommentDTO">
        UPDATE comment
        SET content = #{content}, comment_updated_at = NOW()
        WHERE comment_id = #{commentId} AND comment_deleted_at IS NULL
    </update>
    <!-- 대댓글 수정 -->
    <update id="updateReply" parameterType="com.acorn.movielink.comunity.dto.CommentDTO">
        UPDATE comment
        SET content = #{content}, comment_updated_at = NOW()
        WHERE comment_id = #{commentId} AND parent_id IS NOT NULL AND comment_deleted_at IS NULL
    </update>

    <!-- 댓글 삭제 ( 실제 데이터 삭제 X)-->
    <update id="deleteComment" parameterType="int">
        UPDATE comment
        SET comment_deleted_at = NOW()
        WHERE comment_id = #{commentId}
    </update>

    <!-- 대댓글 삭제 (실제 데이터 삭제 X, 삭제 날짜 기록) -->
    <update id="deleteReply" parameterType="int">
        UPDATE comment
        SET comment_deleted_at = NOW()
        WHERE comment_id = #{commentId}
    </update>


    <!-- 댓글 좋아요 증가 -->
    <update id="increaseLikeCount" parameterType="int">
        UPDATE comment
        SET comment_like_cnt = comment_like_cnt + 1
        WHERE comment_id = #{commentId}
    </update>

    <!-- 댓글 좋아요 취소 -->
    <update id="decreaseLikeCount" parameterType="int">
        UPDATE comment
        SET comment_like_cnt = comment_like_cnt - 1
        WHERE comment_id = #{commentId}
    </update>

    <!-- 특정 게시글에 대한 댓글 수 조회 -->
    <select id="getCommentCountByPostId" resultType="int" parameterType="int">
        SELECT COUNT(*)
        FROM comment
        WHERE post_id = #{postId} AND parent_id IS NULL AND comment_deleted_at IS NULL
    </select>

    <!-- 특정 댓글에 대한 대댓글 수 조회 -->
    <select id="getReplyCountByCommentId" resultType="int" parameterType="int">
        SELECT COUNT(*)
        FROM comment
        WHERE parent_id = #{commentId} AND comment_deleted_at IS NULL
    </select>







</mapper>
